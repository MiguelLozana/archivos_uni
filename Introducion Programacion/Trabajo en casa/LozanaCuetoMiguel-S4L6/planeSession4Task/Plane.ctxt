#BlueJ class context
comment0.target=Plane
comment0.text=\r\n\ Modela\ un\ avion\ en\ base\ a\ un\ piloto,\ un\ identificador\ y\ un\ nivel\ de\ gasolina\r\n\ \r\n\ @author\ Miguel\ Lozana\ CUeto\ \r\n\ @version\ 02/10/2025\r\n
comment1.params=pilot\ identifier\ fuel
comment1.target=Plane(Person,\ char,\ int)
comment1.text=\r\n\ Constructor\ por\ defecto\ de\ la\ clase\ plane\r\n\ @param\ pilot\ Piloto\ asignado\ al\ avion\r\n\ \ @param\ identifier\ identificador\ del\ avi\u00F3n\ con\ un\ caracter\ \r\n\ \ @param\ fuel\ cantidad\ de\ combustible\ del\ avi\u00F3n\r\n
comment10.params=
comment10.target=char\ getIdentifier()
comment10.text=\r\n\ Devuelve\ el\ atributo\ identifier\ \r\n\ @return\ el\ atributo\ identifier\r\n
comment11.params=
comment11.target=int\ getFuel()
comment11.text=\r\n\ Devuelve\ el\ atributo\ fuel\ \r\n\ @return\ el\ atributo\ fuel\r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ Crea\ una\ representaci\u00F3n\ de\ la\ informaci\u00F3n\ del\ objeto\ con\ el\ siguiente\ formato\:\ identificador-gasolina-piloto\r\n\ @return\ Devuelve\ la\ String\ con\ el\ formato\ anterior\ \r\n
comment13.params=
comment13.target=boolean\ fly()
comment13.text=\r\n\ Comprueba\ si\ el\ avion\ puede\ volar,\ si\ tiene\ combustible\ devuelve\ true\ (vuela)\ y\ consume\ 1,\ sino\ devuelve\ false\ (no\ puede\ volar)\r\n@return\ boolean\ True\ si\ tiene\ combustible,\ false\ si\ no\ tiene\r\n
comment14.params=condition\ message
comment14.target=void\ checkParam(boolean,\ java.lang.String)
comment14.text=\r\n\ Comprueba\ si\ un\ par\u00E1metro\ tiene\ sentido\ dentro\ del\ campo\ correspondiente,\ en\ caso\ contrario\ corta\ la\ ejecucion\ y\ muestra\ un\ mensaje\r\n\ @param\ condition\ la\ condici\u00F3n\ que\ el\ parametro\ tiene\ que\ cumplir\r\n\ @param\ message\ el\ mensaje\ mostrado\ en\ el\ caso\ de\ que\ no\ se\ cumpla\ la\ condici\u00F3n.\r\n
comment2.params=
comment2.target=Plane()
comment2.text=\r\n\ Constructor\ de\ la\ clase\ plane\ pero\ con\ piloto\ \=\ null\r\n
comment3.params=pilot
comment3.target=Plane(Person)
comment3.text=\r\n\ Constructor\ de\ la\ clase\ plane\ pero\ con\ piloto\ como\ parametro\r\n\ @param\ pilot\ piloto\ asignado\ al\ avion\r\n
comment4.params=identifier
comment4.target=Plane(char)
comment4.text=\r\n\ Constructor\ de\ la\ clase\ plane\ pero\ con\ identifier\ como\ parametro\r\n\ @param\ fuel\ combustible\ asignado\ al\ avion\r\n
comment5.params=fuel
comment5.target=Plane(int)
comment5.text=\r\n\ Constructor\ de\ la\ clase\ plane\ pero\ con\ fuel\ como\ parametro\r\n\ @param\ fuel\ combustible\ asignado\ al\ avion\r\n
comment6.params=pilot
comment6.target=void\ setPilot(Person)
comment6.text=\r\n\ Establece\ el\ valor\ de\ pilot\r\n\ @param\ pilot\ el\ nuevo\ valor\ para\ el\ atributo\ pilot\r\n
comment7.params=identifier
comment7.target=void\ setIdentifier(char)
comment7.text=\r\n\ Establece\ el\ valor\ de\ identifier\r\n\ @param\ identifier\ el\ nuevo\ valor\ para\ el\ atributo\ identifier\r\n
comment8.params=fuel
comment8.target=void\ setFuel(int)
comment8.text=\r\n\ Establece\ el\ valor\ de\ fuel\r\n\ @param\ fuel\ el\ nuevo\ valor\ para\ el\ atributo\ fuel\r\n
comment9.params=
comment9.target=Person\ getPilot()
comment9.text=\r\n\ Devuelve\ el\ atributo\ pilot\ \r\n\ @return\ el\ atributo\ pilot\r\n
numComments=15
